diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/common/dto/mapper/AbstractDTOMapper.java b/jbugs-business/src/main/java/edu/msg/ro/business/common/dto/mapper/AbstractDTOMapper.java
index fc888ee..41d4f92 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/common/dto/mapper/AbstractDTOMapper.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/common/dto/mapper/AbstractDTOMapper.java
@@ -3,6 +3,7 @@ package edu.msg.ro.business.common.dto.mapper;
 import java.util.ArrayList;
 import java.util.List;
 
+import edu.msg.ro.business.common.dao.AbstractDao;
 import edu.msg.ro.business.common.dto.AbstractDTO;
 import edu.msg.ro.persistence.common.entity.AbstractEntity;
 
@@ -32,10 +33,10 @@ public abstract class AbstractDTOMapper<E extends AbstractEntity, DTO extends Ab
 	}
 
 	public List<DTO> mapToDTOs(List<E> entities) {
-		// TODO refactor with Java8 map()
 
 		List<DTO> dtos = new ArrayList<>();
 		for (E entity : entities) {
+
 			dtos.add(mapToDTO(entity));
 		}
 
@@ -43,6 +44,15 @@ public abstract class AbstractDTOMapper<E extends AbstractEntity, DTO extends Ab
 	}
 
 	// TODO implement mapToEntites()
+	public List<E> mapToEntities(List<DTO> listDTO, AbstractDao<E> dao) {
+		List<E> listEntity = new ArrayList<>();
+		for (DTO dto : listDTO) {
+			E persistedE = dao.findEntity(dto.getId());
+			mapToEntity(dto, persistedE);
+			listEntity.add(persistedE);
+		}
+		return listEntity;
+	}
 
 	protected abstract void mapEntityToDTOFields(E entity, DTO dto);
 
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/PermissionFacade.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/PermissionFacade.java
index e4dd6d8..a6e0fb3 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/PermissionFacade.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/PermissionFacade.java
@@ -8,7 +8,7 @@ import javax.ejb.TransactionAttribute;
 import javax.ejb.TransactionAttributeType;
 
 import edu.msg.ro.business.user.control.PermissionService;
-import edu.msg.ro.persistence.user.entity.Permission;
+import edu.msg.ro.business.user.dto.PermissionDTO;
 
 /**
  * Boundary for permission component.
@@ -23,7 +23,7 @@ public class PermissionFacade {
 	@EJB
 	private PermissionService permissionService;
 
-	public List<Permission> getAll() {
+	public List<PermissionDTO> getAll() {
 		return permissionService.getAllPermissions();
 	}
 }
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/RoleFacade.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/RoleFacade.java
index 354b3d8..4bea718 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/RoleFacade.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/RoleFacade.java
@@ -7,8 +7,9 @@ import javax.ejb.Stateless;
 import javax.ejb.TransactionAttribute;
 import javax.ejb.TransactionAttributeType;
 
+import edu.msg.ro.business.common.exception.BusinessException;
 import edu.msg.ro.business.user.control.RoleService;
-import edu.msg.ro.persistence.user.entity.Role;
+import edu.msg.ro.business.user.dto.RoleDTO;
 
 /**
  * Boundary for role component.
@@ -23,7 +24,12 @@ public class RoleFacade {
 	@EJB
 	private RoleService roleService;
 
-	public List<Role> getAllRoles() {
+	public List<RoleDTO> getAllRoles() {
 		return roleService.getAllRoles();
 	}
+
+	public RoleDTO update(RoleDTO role) throws BusinessException {
+		return roleService.updateRole(role);
+	}
+
 }
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/UserFacade.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/UserFacade.java
index 7f4865f..964f620 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/UserFacade.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/boundary/UserFacade.java
@@ -35,7 +35,6 @@ public class UserFacade {
 
 	public UserDTO deleteUser(UserDTO userDTO) throws TechnicalExeption {
 		return userService.deleteUser(userDTO);
-
 	}
 
 	public List<UserDTO> getAllUsers() {
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/control/PermissionService.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/control/PermissionService.java
index afb8efb..a3b71fa 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/user/control/PermissionService.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/control/PermissionService.java
@@ -4,8 +4,11 @@ import java.util.List;
 
 import javax.ejb.EJB;
 import javax.ejb.Stateless;
+import javax.inject.Inject;
 
 import edu.msg.ro.business.user.dao.PermissionDAO;
+import edu.msg.ro.business.user.dto.PermissionDTO;
+import edu.msg.ro.business.user.dto.mapper.PermissionDTOMapper;
 import edu.msg.ro.persistence.user.entity.Permission;
 
 /**
@@ -20,8 +23,16 @@ public class PermissionService {
 	@EJB
 	private PermissionDAO permissionDAO;
 
-	public List<Permission> getAllPermissions() {
-		return permissionDAO.getAll();
+	@Inject
+	private PermissionDTOMapper permissionDTOMapper;
+
+	public List<PermissionDTO> getAllPermissions() {
+		return permissionDTOMapper.mapToDTOs(permissionDAO.getAll());
 	}
 
+	public PermissionDTO updatePermission(PermissionDTO permission) {
+		Permission persistedPermission = permissionDAO.findEntity(permission.getId());
+		permissionDTOMapper.mapToEntity(permission, persistedPermission);
+		return permissionDTOMapper.mapToDTO(persistedPermission);
+	}
 }
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/control/RoleService.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/control/RoleService.java
index a301d82..1e8a635 100644
--- a/jbugs-business/src/main/java/edu/msg/ro/business/user/control/RoleService.java
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/control/RoleService.java
@@ -4,8 +4,11 @@ import java.util.List;
 
 import javax.ejb.EJB;
 import javax.ejb.Stateless;
+import javax.inject.Inject;
 
 import edu.msg.ro.business.user.dao.RoleDAO;
+import edu.msg.ro.business.user.dto.RoleDTO;
+import edu.msg.ro.business.user.dto.mapper.RoleDTOMapper;
 import edu.msg.ro.persistence.user.entity.Role;
 
 /**
@@ -17,10 +20,19 @@ import edu.msg.ro.persistence.user.entity.Role;
 @Stateless
 public class RoleService {
 
+	@Inject
+	private RoleDTOMapper roleDTOMapper;
+
 	@EJB
 	private RoleDAO roleDAO;
 
-	public List<Role> getAllRoles() {
-		return roleDAO.getAll();
+	public List<RoleDTO> getAllRoles() {
+		return roleDTOMapper.mapToDTOs(roleDAO.getAll());
+	}
+
+	public RoleDTO updateRole(RoleDTO role) {
+		Role persistedRole = roleDAO.findEntity(role.getId());
+		roleDTOMapper.mapToEntity(role, persistedRole);
+		return roleDTOMapper.mapToDTO(persistedRole);
 	}
 }
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/PermissionDTO.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/PermissionDTO.java
new file mode 100644
index 0000000..7c1bc3d
--- /dev/null
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/PermissionDTO.java
@@ -0,0 +1,41 @@
+package edu.msg.ro.business.user.dto;
+
+import java.util.List;
+
+import edu.msg.ro.business.common.dto.AbstractDTO;
+import edu.msg.ro.persistence.user.entity.Permission;
+
+/**
+ * DTO for {@link Permission} for update
+ * 
+ * @author varadp
+ *
+ */
+public class PermissionDTO extends AbstractDTO {
+
+	private String name;
+
+	private List<RoleDTO> role;
+
+	public String getName() {
+		return name;
+	}
+
+	public void setName(String name) {
+		this.name = name;
+	}
+
+	public List<RoleDTO> getRole() {
+		return role;
+	}
+
+	public void setRole(List<RoleDTO> role) {
+		this.role = role;
+	}
+
+	@Override
+	public String toString() {
+		return "PermissionDTO [getId()=" + getId() + ", role=" + role + "]";
+	}
+
+}
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/RoleDTO.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/RoleDTO.java
new file mode 100644
index 0000000..bf7fd86
--- /dev/null
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/RoleDTO.java
@@ -0,0 +1,34 @@
+package edu.msg.ro.business.user.dto;
+
+import java.util.List;
+
+import edu.msg.ro.business.common.dto.AbstractDTO;
+
+public class RoleDTO extends AbstractDTO {
+
+	private List<PermissionDTO> permission;
+
+	private String name;
+
+	public String getName() {
+		return name;
+	}
+
+	public void setName(String name) {
+		this.name = name;
+	}
+
+	public List<PermissionDTO> getPermission() {
+		return permission;
+	}
+
+	public void setPermission(List<PermissionDTO> permission) {
+		this.permission = permission;
+	}
+
+	@Override
+	public String toString() {
+		return "RoleDTO [getId()=" + getId() + ", permission=" + permission + "]";
+	}
+
+}
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/PermissionDTOMapper.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/PermissionDTOMapper.java
new file mode 100644
index 0000000..c77238a
--- /dev/null
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/PermissionDTOMapper.java
@@ -0,0 +1,34 @@
+package edu.msg.ro.business.user.dto.mapper;
+
+import javax.enterprise.context.Dependent;
+
+import edu.msg.ro.business.common.dto.mapper.AbstractDTOMapper;
+import edu.msg.ro.business.user.dto.PermissionDTO;
+import edu.msg.ro.persistence.user.entity.Permission;
+
+/**
+ * Mapper for {@link Permission} and {@link PermissionDTO}
+ * 
+ * @author varadp
+ *
+ */
+@Dependent
+public class PermissionDTOMapper extends AbstractDTOMapper<Permission, PermissionDTO> {
+
+	@Override
+	public PermissionDTO getDTOInstance() {
+		return new PermissionDTO();
+	}
+
+	@Override
+	protected void mapEntityToDTOFields(Permission entity, PermissionDTO dto) {
+		dto.setName(entity.getName());
+	}
+
+	@Override
+	protected void mapDTOToEntityFields(PermissionDTO dto, Permission entity) {
+		entity.setName(dto.getName());
+
+	}
+
+}
diff --git a/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/RoleDTOMapper.java b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/RoleDTOMapper.java
new file mode 100644
index 0000000..60390f3
--- /dev/null
+++ b/jbugs-business/src/main/java/edu/msg/ro/business/user/dto/mapper/RoleDTOMapper.java
@@ -0,0 +1,43 @@
+package edu.msg.ro.business.user.dto.mapper;
+
+import javax.ejb.EJB;
+import javax.ejb.Stateless;
+
+import edu.msg.ro.business.common.dto.mapper.AbstractDTOMapper;
+import edu.msg.ro.business.user.dao.PermissionDAO;
+import edu.msg.ro.business.user.dto.RoleDTO;
+import edu.msg.ro.persistence.user.entity.Role;
+
+/**
+ * Mapper for {@link Role} and {@link RoleDTO}
+ * 
+ * @author varadp
+ *
+ */
+@Stateless
+public class RoleDTOMapper extends AbstractDTOMapper<Role, RoleDTO> {
+
+	@EJB
+	private PermissionDTOMapper pdm;
+
+	@EJB
+	private PermissionDAO pd;
+
+	@Override
+	public RoleDTO getDTOInstance() {
+		return new RoleDTO();
+	}
+
+	@Override
+	protected void mapEntityToDTOFields(Role entity, RoleDTO dto) {
+		dto.setPermission(pdm.mapToDTOs(entity.getPermissions()));
+		dto.setName(entity.getName());
+
+	}
+
+	@Override
+	protected void mapDTOToEntityFields(RoleDTO dto, Role entity) {
+		entity.setPermissions(pdm.mapToEntities(dto.getPermission(), pd));
+		entity.setName(dto.getName());
+	}
+}
diff --git a/jbugs-business/src/test/java/edu/msg/ro/business/user/boundary/RoleFacadeTest.java b/jbugs-business/src/test/java/edu/msg/ro/business/user/boundary/RoleFacadeTest.java
index a80707a..57e3960 100644
--- a/jbugs-business/src/test/java/edu/msg/ro/business/user/boundary/RoleFacadeTest.java
+++ b/jbugs-business/src/test/java/edu/msg/ro/business/user/boundary/RoleFacadeTest.java
@@ -1,21 +1,53 @@
 package edu.msg.ro.business.user.boundary;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import javax.ejb.EJB;
 
 import org.junit.Assert;
 import org.junit.Test;
 
 import edu.msg.ro.business.AbstractIntegrationTest;
+import edu.msg.ro.business.common.exception.BusinessException;
+import edu.msg.ro.business.user.dto.PermissionDTO;
+import edu.msg.ro.business.user.dto.RoleDTO;
 
 public class RoleFacadeTest extends AbstractIntegrationTest {
 
 	@EJB
 	private RoleFacade srt;
 
-	@Test
 	public void getRole_succesfull() {
 		Assert.assertNotEquals("RoleFacade is not working", srt.getAllRoles(), null);
 
 	}
 
+	@Test
+	public void updateRole_succesfull() throws BusinessException {
+
+		// egy uj role
+		RoleDTO testRole = new RoleDTO();
+		testRole.setName("admin");
+
+		// egy uj permission
+		PermissionDTO testPermission = new PermissionDTO();
+		testPermission.setName("somthing");
+		// egy many to many
+		List<RoleDTO> list = new ArrayList<>();
+		list.add(testRole);
+
+		List<PermissionDTO> permissionList = new ArrayList<>();
+		permissionList.add(testPermission);
+
+		testPermission.setRole(list);
+		testRole.setPermission(permissionList);
+
+		// update hivas facede
+
+		RoleDTO updateRole = srt.update(testRole);
+
+		Assert.assertEquals("somthing", updateRole.getPermission().get(0).getName());
+	}
+
 }
diff --git a/jbugs-business/src/test/java/edu/msg/ro/business/user/control/RoleServiceTest.java b/jbugs-business/src/test/java/edu/msg/ro/business/user/control/RoleServiceTest.java
new file mode 100644
index 0000000..9839230
--- /dev/null
+++ b/jbugs-business/src/test/java/edu/msg/ro/business/user/control/RoleServiceTest.java
@@ -0,0 +1,20 @@
+package edu.msg.ro.business.user.control;
+
+import javax.ejb.EJB;
+
+import org.junit.Test;
+
+import edu.msg.ro.business.AbstractIntegrationTest;
+import edu.msg.ro.business.common.exception.BusinessException;
+
+public class RoleServiceTest extends AbstractIntegrationTest {
+
+	@EJB
+	private RoleService sut;
+
+	@Test
+	public void updateRole_Succesfull() throws BusinessException {
+
+	}
+
+}
diff --git a/jbugs-client/src/main/webapp/login.xhtml b/jbugs-client/src/main/webapp/login.xhtml
index d8038d5..d7125e1 100644
--- a/jbugs-client/src/main/webapp/login.xhtml
+++ b/jbugs-client/src/main/webapp/login.xhtml
@@ -12,9 +12,7 @@
 </h:head>
 <h:body>
 	<f:view>
-		<h:outputText value="#{initParam['hello_world']}"></h:outputText>
 		<h:form id="loginForm">
-			<h:messages />
 			<h:panelGrid id="loginPanel" columns="3" cellpadding="5"
 				cellspacing="5">
 				<f:facet name="header">
@@ -33,7 +31,7 @@
 				</h:inputText>
 				<h:message for="password" />
 
-				<f:facet name="footer">
+				<f:facet name="button">
 					<h:panelGroup style="display:block; text-align:center">
 						<h:commandButton id="submit" value="#{msg['login.loginButton']}"
 							action="#{loginBean.processLogin}"
diff --git a/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Permission.java b/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Permission.java
index c00b06e..b331053 100644
--- a/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Permission.java
+++ b/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Permission.java
@@ -54,6 +54,14 @@ public class Permission extends AbstractEntity {
 		this.detail = detail;
 	}
 
+	public List<Role> getRoles() {
+		return roles;
+	}
+
+	public void setRoles(List<Role> roles) {
+		this.roles = roles;
+	}
+
 	@Override
 	public String toString() {
 		return "Permission [id=" + id + ", name=" + name + "]";
diff --git a/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Role.java b/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Role.java
index 92a777e..bd8e328 100644
--- a/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Role.java
+++ b/jbugs-persistence/src/main/java/edu/msg/ro/persistence/user/entity/Role.java
@@ -64,4 +64,12 @@ public class Role extends AbstractEntity {
 		this.name = name;
 	}
 
+	public List<Permission> getPermissions() {
+		return permissions;
+	}
+
+	public void setPermissions(List<Permission> permissions) {
+		this.permissions = permissions;
+	}
+
 }
